% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{iterCol}
\alias{iterCol}
\title{Create an iterator for a color object}
\usage{
iterCol(col, cyclic = FALSE, defVal = NULL, decreasing = F)
}
\arguments{
\item{col}{The color object to iterate over.}

\item{cyclic}{Logical indicating whether the iteration should be cyclic, i.e.,
whether it should wrap around to the beginning of the color object after reaching
the end. Default is FALSE.}

\item{defVal}{The default value to return when there are no more elements in the
color object. Default is NULL.}

\item{decreasing}{Logical indicating whether the iteration should be in decreasing
order. If TRUE, the iterator starts from the last element and moves towards the
first element. Default is FALSE, indicating increasing order.}
}
\value{
An iterator object for the color object.
}
\description{
This function creates an iterator object that allows iterating over the elements
of a color object. The color object should be a list containing color values.
The iterator provides methods for accessing the next element (\code{Next}), the previous
element (\code{Prev}), the current element (\code{This}), checking if there are more elements
(\code{HasNext}), and restarting the iteration (\code{Restart}).
}
\examples{
# Create an iterator for a color object
col <- list("#FF0000", "#00FF00", "#0000FF")
iter <- iterCol(col)

# Iterate over the color object
iter$HasNext() # Returns TRUE
iter$Next() # Returns "#FF0000"
iter$Next() # Returns "#00FF00"
iter$Next() # Returns "#0000FF"
iter$Next() # Returns NULL (end of color object)
iter$HasNext() # Returns FALSE

}
