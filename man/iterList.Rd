% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{iterList}
\alias{iterList}
\title{Create an iterator for a list}
\usage{
iterList(lista, cyclic = FALSE, defVal = NULL, decreasing = F)
}
\arguments{
\item{lista}{The list to iterate over.}

\item{cyclic}{Logical indicating whether the iteration should be cyclic, i.e.,
whether it should wrap around to the beginning of the list after reaching the end.
Default is FALSE.}

\item{defVal}{The default value to return when there are no more elements in the
list. Default is NULL.}

\item{decreasing}{Logical indicating whether the iteration should be in decreasing
order. If TRUE, the iterator starts from the last element and moves towards the
first element. Default is FALSE, indicating increasing order.}
}
\value{
An iterator object for the list.
}
\description{
This function creates an iterator object that allows iterating over the elements
of a list. The iterator provides methods for accessing the next element (\code{Next}),
the previous element (\code{Prev}), the current element (\code{This}), checking if there
are more elements (\code{HasNext}), and restarting the iteration (\code{Restart}).
}
\examples{
# Create an iterator for a list
lista <- list("a", "b", "c")
iter <- iterList(lista)

# Iterate over the list
iter$HasNext() # Returns TRUE
iter$Next() # Returns "a"
iter$Next() # Returns "b"
iter$Next() # Returns "c"
iter$Next() # Returns NULL (end of list)
iter$HasNext() # Returns FALSE

}
